#!/usr/bin/env bash
set -euo pipefail

echo "[1/5] Apply BLUE and GREEN deployments + services"
kubectl apply -f blue_deployment.yaml
kubectl apply -f green_deployment.yaml
kubectl apply -f kubeservice.yaml

echo "[2/5] Wait for pods to be ready"
kubectl rollout status deploy/django-messaging-blue
kubectl rollout status deploy/django-messaging-green

echo "[3/5] Check GREEN pod logs (last 50 lines)"
GREEN_POD="$(kubectl get pods -l app=django-messaging,version=green -o jsonpath='{.items[0].metadata.name}')"
kubectl logs "$GREEN_POD" --tail=50 || true

echo "[4/5] Switch stable Service from BLUE -> GREEN"
kubectl patch service django-messaging \
  --type merge \
  -p '{"spec":{"selector":{"app":"django-messaging","version":"green"}}}'

echo "[5/5] Verify Endpoints now point to GREEN"
kubectl get endpoints django-messaging -o wide

cat <<'EOF'

Done!

- Test BLUE directly:  kubectl port-forward svc/django-messaging-blue 8081:8000
- Test GREEN directly: kubectl port-forward svc/django-messaging-green 8082:8000
- Test STABLE:         kubectl port-forward svc/django-messaging 8080:8000

Rollback to BLUE (if needed):
kubectl patch service django-messaging \
  --type merge \
  -p '{"spec":{"selector":{"app":"django-messaging","version":"blue"}}}'
EOF
